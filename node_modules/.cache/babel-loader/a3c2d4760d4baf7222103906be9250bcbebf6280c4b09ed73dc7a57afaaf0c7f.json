{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Documents/GitHub/bimbamjob/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Lawn from \"./components/Lawn\";\nimport Mower from \"./components/Mower\";\nimport BimBamJob from './components/Bimbamjob';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [commands, setCommands] = useState();\n  const [mower, setMowers] = useState(null);\n  const [size, setSize] = useState(0);\n  useEffect(() => {\n    var s = String(commands).split(/\\r?\\n/)[0];\n    if (parseInt(s)) {\n      setSize(s);\n    }\n\n    //console.log(commands.indexOf(/\\r?\\n/))\n  }, [commands]);\n  function logcommands(e) {\n    var fr = new FileReader();\n    fr.onload = function () {\n      document.getElementById('commands').textContent = fr.result;\n      setSize(String(fr.result).split(/\\r?\\n/)[0]);\n      var commands = String(fr.result).match(/[0-9]{2} [A-Z]\\r?\\n[A-Z]+/gmi);\n      console.log(commands);\n      let mowers = [];\n      for (let command of commands) {\n        console.log(command);\n        var initial = String(command.split(/\\n/)[0]).replace(/\\s/g, \"\");\n        var order = String(command.split(/\\n/)[1]);\n        let item = {};\n        item.initial = [...initial];\n        item.order = order;\n        items.push(item);\n      }\n      setMowers(mowers);\n      console.log(itemowersmowersms);\n    };\n    fr.readAsText(...e.target.files);\n  }\n  function generateMowers() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Tondeuses BimBamJob \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"commands\",\n        type: \"file\",\n        onChange: e => {\n          logcommands(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"displaycommands\",\n        rows: \"5\",\n        cols: \"30\",\n        value: commands\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(Lawn, {\n        size: parseInt(size)\n      }, size, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Mower, {\n        name: \"tondeuse1\",\n        commands: \"LFRRFFLFRFF\",\n        x: 4,\n        y: 4,\n        s: \"S\",\n        size: 55\n      }, \"mower\" + size, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Mower, {\n        name: \"tondeuse2\",\n        commands: \"FFRLLRFRLF\",\n        x: 2,\n        y: 2,\n        s: \"N\",\n        size: 55\n      }, \"mower1\" + size, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jcJtq/iIErZrH74XkLKWMAABzxw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Lawn","Mower","BimBamJob","App","commands","setCommands","mower","setMowers","size","setSize","s","String","split","parseInt","logcommands","e","fr","FileReader","onload","document","getElementById","textContent","result","match","console","log","mowers","command","initial","replace","order","item","items","push","itemowersmowersms","readAsText","target","files","generateMowers"],"sources":["/home/isaac/Documents/GitHub/bimbamjob/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Lawn from \"./components/Lawn\"\nimport Mower from \"./components/Mower\"\n\n\nimport BimBamJob from './components/Bimbamjob'\n\nfunction App() {\n  const [commands, setCommands] = useState()\n  const [mower, setMowers] = useState(null)\n  const [size, setSize] = useState(0)\n\n  useEffect(() => {     \n    var s = String(commands).split(/\\r?\\n/)[0];\n    if(parseInt(s)) {\n      setSize(s)\n    }\n\n    //console.log(commands.indexOf(/\\r?\\n/))\n     \n  },[commands])\n\n\n  function logcommands(e) {\n    var fr=new FileReader();\n      fr.onload=function(){\n          document.getElementById('commands')\n                  .textContent=fr.result;\n          \n          setSize(String(fr.result).split(/\\r?\\n/)[0])\n          var commands = String(fr.result).match(/[0-9]{2} [A-Z]\\r?\\n[A-Z]+/gmi)\n          console.log(commands)\n\n          let mowers =[]\n          for(let command of commands) {\n              console.log(command)\n              var initial = String(command.split(/\\n/)[0]).replace(/\\s/g, \"\")\n              var order = String(command.split(/\\n/)[1])\n              let item={};\n              item.initial = [...initial]\n              item.order = order\n              items.push(item)\n          }\n          setMowers(mowers)\n          console.log(itemowersmowersms)\n\n\n\n         \n      }\n      \n      fr.readAsText(...e.target.files);  \n  }\n\n  function generateMowers() {\n\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1> Tondeuses BimBamJob </h1>\n        <input id=\"commands\" type=\"file\" onChange={e=> { logcommands(e) }}/>\n        <textarea id=\"displaycommands\" rows=\"5\" cols=\"30\" value={commands}/>\n      </div>\n      <div className=\"game\">\n         <Lawn key={size} size={parseInt(size)} /> \n         <Mower key={\"mower\"+size} name=\"tondeuse1\" commands=\"LFRRFFLFRFF\" x={4} y={4} s={\"S\"} size={55} />\n         <Mower key={\"mower1\"+size} name=\"tondeuse2\" commands=\"FFRLLRFRLF\" x={2} y={2} s={\"N\"} size={55} />\n      </div>\n      \n     \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}