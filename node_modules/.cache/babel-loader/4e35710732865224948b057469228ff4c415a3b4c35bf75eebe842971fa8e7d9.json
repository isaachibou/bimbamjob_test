{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Documents/GitHub/bimbamjob/src/components/Lawn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Square from './Square';\nimport Mower from './Mower';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lawn = props => {\n  _s();\n  const [lawn, setLawn] = useState(Array(parseInt(props.size)).fill(null));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [mowers && mowers.map((mower, index) => /*#__PURE__*/_jsxDEV(Mower, {\n      name: \"tondeuse_\" + index,\n      commands: mower.order,\n      x: parseInt(mower.initial[0]),\n      y: parseInt(mower.initial[0]),\n      s: mower.initial[2],\n      size: size\n    }, \"mower_\" + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Pelouse taille \", props.size]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), lawn.map((s, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: lawn.map((sq, index) => /*#__PURE__*/_jsxDEV(Square, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }, this))\n    }, \"r\" + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 4\n  }, this);\n};\n_s(Lawn, \"SzhWjxXVLUrf1PRO8dVNuOKhx/c=\");\n_c = Lawn;\nexport default Lawn;\nvar _c;\n$RefreshReg$(_c, \"Lawn\");","map":{"version":3,"names":["React","useState","useEffect","Square","Mower","Lawn","props","lawn","setLawn","Array","parseInt","size","fill","mowers","map","mower","index","order","initial","s","i","sq"],"sources":["/home/isaac/Documents/GitHub/bimbamjob/src/components/Lawn.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Square from './Square'\nimport Mower from './Mower'\n\n\nconst Lawn = (props) =>  {\n  const [lawn, setLawn] = useState(Array(parseInt(props.size)).fill(null))\n  \n  return (\n  \t<div>\n    { mowers && mowers.map((mower, index) => (\n      <Mower key={\"mower_\"+index} name={\"tondeuse_\"+index}   commands={mower.order} x={parseInt(mower.initial[0])} y={parseInt(mower.initial[0])} s={mower.initial[2]} size={size}/>\n    ))}  \n    <h3>Pelouse taille {props.size}</h3>\n    \n          {lawn.map((s,i) => \n            <div key={\"r\"+i} className=\"board-row\">\n            {lawn.map((sq,index) => \n              <Square key={index} />\n            )}\n            </div>\n          )}\n    </div>\n  );\n}\nexport default Lawn"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAAA;AAG3B,MAAMC,IAAI,GAAIC,KAAK,IAAM;EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACQ,KAAK,CAACC,QAAQ,CAACJ,KAAK,CAACK,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAExE,oBACC;IAAA,WACGC,MAAM,IAAIA,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAClC,QAAC,KAAK;MAAsB,IAAI,EAAE,WAAW,GAACA,KAAM;MAAG,QAAQ,EAAED,KAAK,CAACE,KAAM;MAAC,CAAC,EAAEP,QAAQ,CAACK,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAAE;MAAC,CAAC,EAAER,QAAQ,CAACK,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAAE;MAAC,CAAC,EAAEH,KAAK,CAACG,OAAO,CAAC,CAAC,CAAE;MAAC,IAAI,EAAEP;IAAK,GAAhK,QAAQ,GAACK,KAAK;MAAA;MAAA;MAAA;IAAA,QAC3B,CAAC,eACF;MAAA,8BAAoBV,KAAK,CAACK,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EAE7BJ,IAAI,CAACO,GAAG,CAAC,CAACK,CAAC,EAACC,CAAC,kBACZ;MAAiB,SAAS,EAAC,WAAW;MAAA,UACrCb,IAAI,CAACO,GAAG,CAAC,CAACO,EAAE,EAACL,KAAK,kBACjB,QAAC,MAAM,MAAMA,KAAK;QAAA;QAAA;QAAA;MAAA,QAAI;IACvB,GAHS,GAAG,GAACI,CAAC;MAAA;MAAA;MAAA;IAAA,QAIT,CACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAA,GAnBKf,IAAI;AAAA,KAAJA,IAAI;AAoBV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}