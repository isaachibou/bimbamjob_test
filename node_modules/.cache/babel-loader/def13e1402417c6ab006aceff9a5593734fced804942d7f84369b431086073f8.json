{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Documents/GitHub/bimbamjob/src/components/Lawn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Square from './Square';\nimport Mower from './Mower';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lawn = props => {\n  _s();\n  const [lawn, setLawn] = useState(Array(parseInt(props.size)).fill(null));\n  const [positions, setPositions] = useState([]);\n  const updatePositions = pos => {\n    var temp = [];\n    temps.push(pos);\n    setPositions(old => old.map((el, i) => old[i] = temp[i]));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: props.mowers && props.mowers.map((mower, index) => /*#__PURE__*/_jsxDEV(Mower, {\n        update: updatePositions,\n        name: \"tondeuse_\" + index,\n        commands: mower.order,\n        x: parseInt(mower.initial[0]),\n        y: parseInt(mower.initial[0]),\n        s: mower.initial[2],\n        size: props.size\n      }, \"mower_\" + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Pelouse taille \", props.size]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), lawn.map((s, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: lawn.map((sq, index) => /*#__PURE__*/_jsxDEV(Square, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this))\n    }, \"r\" + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 4\n  }, this);\n};\n_s(Lawn, \"dQLj1AKyjVR1/eoxtWPXScX0Igk=\");\n_c = Lawn;\nexport default Lawn;\nvar _c;\n$RefreshReg$(_c, \"Lawn\");","map":{"version":3,"names":["React","useState","useEffect","Square","Mower","Lawn","props","lawn","setLawn","Array","parseInt","size","fill","positions","setPositions","updatePositions","pos","temp","temps","push","old","map","el","i","mowers","mower","index","order","initial","s","sq"],"sources":["/home/isaac/Documents/GitHub/bimbamjob/src/components/Lawn.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Square from './Square'\nimport Mower from './Mower'\n\n\nconst Lawn = (props) =>  {\n  const [lawn, setLawn] = useState(Array(parseInt(props.size)).fill(null))\n  const [positions, setPositions]=useState([])\n\n  const updatePositions = pos => {\n    var temp = [];\n    temps.push(pos);\n    setPositions((old) => old.map((el,i) => old[i] = temp[i]))\n  }\n\n  return (\n  \t<div>\n      <div className=\"game\">\n      { props.mowers && props.mowers.map((mower, index) => (\n        <Mower key={\"mower_\"+index} update={updatePositions} name={\"tondeuse_\"+index} commands={mower.order} x={parseInt(mower.initial[0])} y={parseInt(mower.initial[0])} s={mower.initial[2]} size={props.size}/>\n      ))}  \n      </div>\n    <h3>Pelouse taille {props.size}</h3>\n    \n          {lawn.map((s,i) => \n            <div key={\"r\"+i} className=\"board-row\">\n            {lawn.map((sq,index) => \n              <Square key={index} />\n            )}\n            </div>\n          )}\n    </div>\n  );\n}\nexport default Lawn"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAAA;AAG3B,MAAMC,IAAI,GAAIC,KAAK,IAAM;EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACQ,KAAK,CAACC,QAAQ,CAACJ,KAAK,CAACK,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACxE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,eAAe,GAAGC,GAAG,IAAI;IAC7B,IAAIC,IAAI,GAAG,EAAE;IACbC,KAAK,CAACC,IAAI,CAACH,GAAG,CAAC;IACfF,YAAY,CAAEM,GAAG,IAAKA,GAAG,CAACC,GAAG,CAAC,CAACC,EAAE,EAACC,CAAC,KAAKH,GAAG,CAACG,CAAC,CAAC,GAAGN,IAAI,CAACM,CAAC,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED,oBACC;IAAA,wBACG;MAAK,SAAS,EAAC,MAAM;MAAA,UACnBjB,KAAK,CAACkB,MAAM,IAAIlB,KAAK,CAACkB,MAAM,CAACH,GAAG,CAAC,CAACI,KAAK,EAAEC,KAAK,kBAC9C,QAAC,KAAK;QAAsB,MAAM,EAAEX,eAAgB;QAAC,IAAI,EAAE,WAAW,GAACW,KAAM;QAAC,QAAQ,EAAED,KAAK,CAACE,KAAM;QAAC,CAAC,EAAEjB,QAAQ,CAACe,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAAE;QAAC,CAAC,EAAElB,QAAQ,CAACe,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAAE;QAAC,CAAC,EAAEH,KAAK,CAACG,OAAO,CAAC,CAAC,CAAE;QAAC,IAAI,EAAEtB,KAAK,CAACK;MAAK,GAA7L,QAAQ,GAACe,KAAK;QAAA;QAAA;QAAA;MAAA,QAC3B;IAAC;MAAA;MAAA;MAAA;IAAA,QACI,eACR;MAAA,8BAAoBpB,KAAK,CAACK,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EAE7BJ,IAAI,CAACc,GAAG,CAAC,CAACQ,CAAC,EAACN,CAAC,kBACZ;MAAiB,SAAS,EAAC,WAAW;MAAA,UACrChB,IAAI,CAACc,GAAG,CAAC,CAACS,EAAE,EAACJ,KAAK,kBACjB,QAAC,MAAM,MAAMA,KAAK;QAAA;QAAA;QAAA;MAAA,QAAI;IACvB,GAHS,GAAG,GAACH,CAAC;MAAA;MAAA;MAAA;IAAA,QAIT,CACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAA,GA5BKlB,IAAI;AAAA,KAAJA,IAAI;AA6BV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}