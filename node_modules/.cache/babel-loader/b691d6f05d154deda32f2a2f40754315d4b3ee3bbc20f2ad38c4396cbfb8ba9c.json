{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Documents/GitHub/bimbamjob/src/components/Mower.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mower = props => {\n  _s();\n  const [position, setPosition] = useState([props.x, props.y, props.s]);\n  const directions = [\"N\", \"E\", \"S\", \"W\"];\n  props.setReady(false);\n  useEffect(() => {\n    readCommands(props.commands);\n  }, []);\n  function changeOrientation(offset, direction) {\n    var length = directions.length;\n    var newindex = directions.findIndex(e => e == direction) + offset;\n\n    // control direction array edges\n    if (newindex == -1) {\n      newindex = length - 1;\n    }\n    if (newindex == length) {\n      newindex = 0;\n    }\n    return directions[newindex];\n  }\n  function moveForward(pos) {\n    var [x, y, s] = pos;\n\n    // Control Lawn edges from 0 to max size on each coordinates\n    if (!(x !== props.size - 1 && x !== 0 && y == !0 && y !== props.size - 1)) {\n      // Work each case\n      switch (s) {\n        case \"S\":\n          // Down\n          y = y - 1;\n          break;\n        case \"E\":\n          // Right\n          x += 1;\n          break;\n        case \"N\":\n          // Up\n          y += 1;\n          break;\n        case \"W\":\n          // Left\n          x -= 1;\n          break;\n        default:\n      }\n    }\n    return [x, y];\n  }\n  function readCommands(commands) {\n    var pos = [...position];\n    for (let command of commands) {\n      // Change orientation command \n      console.log(\"command \", command);\n      switch (command) {\n        case \"R\":\n          pos[2] = changeOrientation(1, pos[2]);\n          setPosition(old => old.map((el, i) => old[i] = pos[i]));\n          break;\n        case \"L\":\n          pos[2] = changeOrientation(-1, pos[2]);\n          setPosition(old => old.map((el, i) => old[i] = pos[i]));\n          break;\n        case \"F\":\n          [pos[0], pos[1]] = moveForward(pos);\n          setPosition(old => old.map((el, i) => old[i] = pos[i]));\n          break;\n        default:\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"mower\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [props.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [position[0], \" \", position[1], \" \", position[2], \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 4\n  }, this);\n};\n_s(Mower, \"qIajyY+CZCMGKfMaBpTS3BJFqO4=\");\n_c = Mower;\nexport default Mower;\nvar _c;\n$RefreshReg$(_c, \"Mower\");","map":{"version":3,"names":["React","useState","useEffect","Mower","props","position","setPosition","x","y","s","directions","setReady","readCommands","commands","changeOrientation","offset","direction","length","newindex","findIndex","e","moveForward","pos","size","command","console","log","old","map","el","i","name"],"sources":["/home/isaac/Documents/GitHub/bimbamjob/src/components/Mower.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface FullName {\n\tname: string;\n    x: int;\n    y: int;\n    s: char;\n    size: int;\n    commands: string;\n}\n\nconst Mower = (props:FullName) =>  {\n const [position, setPosition] = useState([props.x, props.y, props.s]);\n const directions = [\"N\",\"E\",\"S\",\"W\"];\n\n props.setReady(false)\n\n  useEffect(() => {\n    readCommands(props.commands)\n  }, []);\t\n\n  function changeOrientation(offset, direction) {\n  \tvar length = directions.length\n  \tvar newindex = directions.findIndex(e => e == direction)+offset\n\n  \t// control direction array edges\n  \tif(newindex == -1) { newindex = length-1}\n  \tif(newindex == length) { newindex = 0 }\n\n  \treturn directions[newindex]\n\n  }\n\n  function moveForward(pos) {\n   \n  \tvar [x,y,s] = pos;\n\n  \t// Control Lawn edges from 0 to max size on each coordinates\n  \tif( !(x!== props.size-1 && x !== 0 &&  y ==! 0 && y !== props.size-1)) {\n\t  \t// Work each case\n\t  \tswitch(s) {\n\t\t  \tcase \"S\": // Down\n\t\t  \t\ty=y-1;\n\t\t  \tbreak;\n\t\t  \tcase \"E\": // Right\n\t\t  \t\tx+=1;\n\t\t  \tbreak;\n\t\t  \tcase \"N\": // Up\n\t\t  \t\ty+=1;\n\t\t  \tbreak;\n\t\t  \tcase \"W\": // Left\n\t\t  \t\tx-=1;\n\t\t  \tbreak;\n\n\t  \t\tdefault:\n\t  \t}\n\t}\n  \treturn [x,y]\n  \t \n  }\n \n  function readCommands(commands) {\n  \tvar pos = [...position]\n  \tfor(let command of commands) {\n\t\n   \t\t// Change orientation command \n\t\tconsole.log(\"command \", command)\n  \t\tswitch(command) {\n  \t\t\tcase \"R\":   \t\t\t\t \n  \t\t\t\tpos[2] = changeOrientation(1,pos[2]);\n\t    \t\tsetPosition((old) => old.map((el,i) => old[i] = pos[i]))   \t \n  \t\t\tbreak;\n  \t\t\tcase \"L\":\n  \t\t\t\tpos[2] = changeOrientation(-1, pos[2]);\n\t    \t\tsetPosition((old) => old.map((el,i) => old[i] = pos[i]))\n  \t\t\tbreak;\n\t  \t\tcase \"F\":\n\t  \t\t\t[pos[0], pos[1]] = moveForward(pos);\n\t    \t\tsetPosition((old) => old.map((el,i) => old[i] = pos[i]))\n\t  \t\tbreak;\n  \t\t\tdefault:\n  \t\t}\n  \t}\n  \t\n  }\n\n  return (\n  \t<div class=\"mower\">\n  \t\t<span>{props.name} </span><br/>\n    \t<span >{position[0]} {position[1]} {position[2]} </span>\n    </div>\n  );\n}\n\nexport default Mower"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}