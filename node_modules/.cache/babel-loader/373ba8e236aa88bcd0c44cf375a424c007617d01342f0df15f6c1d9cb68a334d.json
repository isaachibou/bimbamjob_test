{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Documents/GitHub/bimbamjob/src/components/Mower.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mower = props => {\n  _s();\n  const [position, setPosition] = useState([props.x, props.y, props.s]);\n  const commands = \"LF\";\n  const directions = [\"N\", \"E\", \"S\", \"W\"];\n  useEffect(() => {\n    readCommands();\n  }, []);\n  function changeOrientation(offset, direction) {\n    console.log(\"Change orientation command \", offset, direction);\n    var length = directions.length;\n    var newindex = directions.findIndex(e => e == direction) + offset;\n\n    // control direction array edges\n    if (newindex == -1) {\n      newindex = length - 1;\n    }\n    if (newindex == length) {\n      newindex = 0;\n    }\n    return directions[newindex];\n  }\n  function moveForward(orientation) {\n    switch (orientation) {}\n  }\n  function readCommands() {\n    var pos = [...position];\n    for (let command of commands) {\n      // Change orientation command \n      switch (command) {\n        case \"R\":\n          pos[2] = changeOrientation(1, pos[2]);\n          setPosition([...pos]);\n          break;\n        case \"L\":\n          pos[2] = changeOrientation(-1, pos[2]);\n          setPosition([...pos]);\n          break;\n        case \"F\":\n          [pos[0], pos[1]] = moveForward(pos[2]);\n          break;\n        default:\n      }\n    }\n    console.log(...pos);\n    setPosition();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [props.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [props.x, \" \", props.y, \" \", props.s, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 4\n  }, this);\n};\n_s(Mower, \"qIajyY+CZCMGKfMaBpTS3BJFqO4=\");\n_c = Mower;\nexport default Mower;\nvar _c;\n$RefreshReg$(_c, \"Mower\");","map":{"version":3,"names":["React","useState","useEffect","Mower","props","position","setPosition","x","y","s","commands","directions","readCommands","changeOrientation","offset","direction","console","log","length","newindex","findIndex","e","moveForward","orientation","pos","command","name"],"sources":["/home/isaac/Documents/GitHub/bimbamjob/src/components/Mower.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface FullName {\n\tname: string;\n    x: int;\n    y: int;\n    s: char;\n}\n\nconst Mower = (props:FullName) =>  {\n  const [position, setPosition] = useState([props.x, props.y, props.s]);\n\n  const commands = \"LF\"\n  const directions = [\"N\",\"E\",\"S\",\"W\"];\n\n  useEffect(() => {\n    readCommands()\n  }, []);\n\n  function changeOrientation(offset, direction) {\n  \tconsole.log(\"Change orientation command \", offset, direction)\n  \tvar length = directions.length\n  \tvar newindex = directions.findIndex(e => e == direction)+offset\n\n  \t// control direction array edges\n  \tif(newindex == -1) { newindex = length-1}\n  \tif(newindex == length) { newindex = 0 }\n\n  \treturn directions[newindex]\n\n  }\n\n  function moveForward(orientation) {\n  \tswitch(orientation) {\n  \t\t\n  \t}\n  \t \n  }\n\n  function readCommands() {\n  \tvar pos = [...position]\n  \tfor(let command of commands) {\n\n   \t\t// Change orientation command \n  \t\tswitch(command) {\n  \t\t\tcase \"R\": \n  \t\t\t\tpos[2] = changeOrientation(1,pos[2]);\n  \t\t\t\tsetPosition([...pos])\n  \t\t\tbreak;\n  \t\t\tcase \"L\":\n  \t\t\t\tpos[2] = changeOrientation(-1, pos[2]);\n  \t\t\t\tsetPosition([...pos])\n  \t\t\tbreak;\n\t  \t\tcase \"F\":\n\t  \t\t\t[pos[0], pos[1]] = moveForward(pos[2]);\n\t  \t\tbreak;\n  \t\t\tdefault:\n  \t\t}\n\n  \t}\n  \tconsole.log(...pos)\n  \tsetPosition()\n  \t\n  }\n\n  return (\n  \t<div >\n  \t\t<span>{props.name} </span><br/>\n    \t<span>{props.x} {props.y} {props.s} </span>\n    </div>\n  );\n}\n\nexport default Mower"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AASnD,MAAMC,KAAK,GAAIC,KAAc,IAAM;EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,CAACG,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACI,CAAC,EAAEJ,KAAK,CAACK,CAAC,CAAC,CAAC;EAErE,MAAMC,QAAQ,GAAG,IAAI;EACrB,MAAMC,UAAU,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;EAEpCT,SAAS,CAAC,MAAM;IACdU,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,iBAAiB,CAACC,MAAM,EAAEC,SAAS,EAAE;IAC7CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,MAAM,EAAEC,SAAS,CAAC;IAC7D,IAAIG,MAAM,GAAGP,UAAU,CAACO,MAAM;IAC9B,IAAIC,QAAQ,GAAGR,UAAU,CAACS,SAAS,CAACC,CAAC,IAAIA,CAAC,IAAIN,SAAS,CAAC,GAACD,MAAM;;IAE/D;IACA,IAAGK,QAAQ,IAAI,CAAC,CAAC,EAAE;MAAEA,QAAQ,GAAGD,MAAM,GAAC,CAAC;IAAA;IACxC,IAAGC,QAAQ,IAAID,MAAM,EAAE;MAAEC,QAAQ,GAAG,CAAC;IAAC;IAEtC,OAAOR,UAAU,CAACQ,QAAQ,CAAC;EAE5B;EAEA,SAASG,WAAW,CAACC,WAAW,EAAE;IACjC,QAAOA,WAAW;EAInB;EAEA,SAASX,YAAY,GAAG;IACvB,IAAIY,GAAG,GAAG,CAAC,GAAGnB,QAAQ,CAAC;IACvB,KAAI,IAAIoB,OAAO,IAAIf,QAAQ,EAAE;MAE3B;MACD,QAAOe,OAAO;QACb,KAAK,GAAG;UACPD,GAAG,CAAC,CAAC,CAAC,GAAGX,iBAAiB,CAAC,CAAC,EAACW,GAAG,CAAC,CAAC,CAAC,CAAC;UACpClB,WAAW,CAAC,CAAC,GAAGkB,GAAG,CAAC,CAAC;UACtB;QACA,KAAK,GAAG;UACPA,GAAG,CAAC,CAAC,CAAC,GAAGX,iBAAiB,CAAC,CAAC,CAAC,EAAEW,GAAG,CAAC,CAAC,CAAC,CAAC;UACtClB,WAAW,CAAC,CAAC,GAAGkB,GAAG,CAAC,CAAC;UACtB;QACA,KAAK,GAAG;UACP,CAACA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGF,WAAW,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC;UACvC;QACA;MAAQ;IAGV;IACAR,OAAO,CAACC,GAAG,CAAC,GAAGO,GAAG,CAAC;IACnBlB,WAAW,EAAE;EAEd;EAEA,oBACC;IAAA,wBACC;MAAA,WAAOF,KAAK,CAACsB,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9B;MAAA,WAAOtB,KAAK,CAACG,CAAC,OAAGH,KAAK,CAACI,CAAC,OAAGJ,KAAK,CAACK,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACtC;AAEV,CAAC;AAAA,GA9DKN,KAAK;AAAA,KAALA,KAAK;AAgEX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}