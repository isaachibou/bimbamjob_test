{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Documents/GitHub/bimbamjob/src/components/Mower.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mower = props => {\n  _s();\n  const position = useState([props.x, props.y, props.s]);\n  console.log(\"initial position\", ...position[0]);\n  const commands = \"LFRRFFLFRFF\";\n  function readCommands() {\n    for (let command of commands) {\n      console.log(command);\n    }\n  }\n  readCommands();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [props.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [props.x, \" \", props.y, \" \", props.s, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 4\n  }, this);\n};\n_s(Mower, \"LuPLMaubeI3MxZxBP4oR5nkO8Zg=\");\n_c = Mower;\nexport default Mower;\nvar _c;\n$RefreshReg$(_c, \"Mower\");","map":{"version":3,"names":["React","useState","Mower","props","position","x","y","s","console","log","commands","readCommands","command","name"],"sources":["/home/isaac/Documents/GitHub/bimbamjob/src/components/Mower.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface FullName {\n\tname: string;\n    x: int;\n    y: int;\n    s: char;\n}\n\nconst Mower = (props:FullName) =>  {\n  const position = useState([props.x, props.y, props.s]);\n  console.log(\"initial position\", ...position[0]);\n\n  const commands = \"LFRRFFLFRFF\"\n\n  function readCommands() {\n  \tfor(let command of commands) {\n  \t\tconsole.log(command)\n  \t}\n  }\n\n  readCommands()\n\n  return (\n  \t<div>\n  \t\t<span>{props.name} </span><br/>\n    \t<span>{props.x} {props.y} {props.s} </span>\n    </div>\n  );\n}\n\nexport default Mower"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AASxC,MAAMC,KAAK,GAAIC,KAAc,IAAM;EAAA;EACjC,MAAMC,QAAQ,GAAGH,QAAQ,CAAC,CAACE,KAAK,CAACE,CAAC,EAAEF,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACI,CAAC,CAAC,CAAC;EACtDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE/C,MAAMM,QAAQ,GAAG,aAAa;EAE9B,SAASC,YAAY,GAAG;IACvB,KAAI,IAAIC,OAAO,IAAIF,QAAQ,EAAE;MAC5BF,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC;IACrB;EACD;EAEAD,YAAY,EAAE;EAEd,oBACC;IAAA,wBACC;MAAA,WAAOR,KAAK,CAACU,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9B;MAAA,WAAOV,KAAK,CAACE,CAAC,OAAGF,KAAK,CAACG,CAAC,OAAGH,KAAK,CAACI,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACtC;AAEV,CAAC;AAAA,GApBKL,KAAK;AAAA,KAALA,KAAK;AAsBX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}