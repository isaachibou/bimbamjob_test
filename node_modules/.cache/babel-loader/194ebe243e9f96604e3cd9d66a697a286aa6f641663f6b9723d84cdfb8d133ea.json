{"ast":null,"code":"var _jsxFileName = \"/home/isaac/Documents/GitHub/bimbamjob/src/components/Lawn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Square from './Square';\nimport Mower from './Mower';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lawn = props => {\n  _s();\n  const [lawn, setLawn] = useState(Array(parseInt(props.size)).fill(null));\n  const [positions, setPositions] = useState([\"\"]);\n  const updatePositions = pos => {\n    var temp = positions;\n    temp.push(pos);\n    setPositions(pos);\n  };\n  useEffect(() => {\n    for (let position of positions) {\n      if (String(position).match(/[0-9]/)) {\n        console.log(\"hop\", position);\n      }\n    }\n  }, [positions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: props.mowers && props.mowers.map((mower, index) => /*#__PURE__*/_jsxDEV(Mower, {\n        update: updatePositions,\n        name: \"tondeuse_\" + index,\n        commands: mower.order,\n        x: parseInt(mower.initial[0]),\n        y: parseInt(mower.initial[0]),\n        s: mower.initial[2],\n        size: props.size\n      }, \"mower_\" + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Pelouse taille \", props.size]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), lawn.map((s, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: lawn.map((sq, index) => /*#__PURE__*/_jsxDEV(Square, {\n        id: i + '' + index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this))\n    }, \"r\" + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 4\n  }, this);\n};\n_s(Lawn, \"OAKAmrxvXlO9Sly4mJwNguoGQ+Q=\");\n_c = Lawn;\nexport default Lawn;\nvar _c;\n$RefreshReg$(_c, \"Lawn\");","map":{"version":3,"names":["React","useState","useEffect","Square","Mower","Lawn","props","lawn","setLawn","Array","parseInt","size","fill","positions","setPositions","updatePositions","pos","temp","push","position","String","match","console","log","mowers","map","mower","index","order","initial","s","i","sq"],"sources":["/home/isaac/Documents/GitHub/bimbamjob/src/components/Lawn.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Square from './Square'\nimport Mower from './Mower'\n\n\nconst Lawn = (props) =>  {\n  const [lawn, setLawn] = useState(Array(parseInt(props.size)).fill(null))\n  const [positions, setPositions]=useState([\"\"])\n\n  const updatePositions = pos => {\n    var temp = positions;\n    temp.push(pos);\n    setPositions(pos) \n  }\n\n  useEffect(() => {     \n    for(let position of positions) {\n      \n      if(String(position).match(/[0-9]/)) {\n        console.log(\"hop\",position)\n      }\n    }\n     \n  },[positions])\n\n  return (\n  \t<div>\n      <div className=\"game\">\n      { props.mowers && props.mowers.map((mower, index) => (\n        <Mower key={\"mower_\"+index} update={updatePositions} name={\"tondeuse_\"+index} commands={mower.order} x={parseInt(mower.initial[0])} y={parseInt(mower.initial[0])} s={mower.initial[2]} size={props.size}/>\n      ))}  \n      </div>\n       \n    <h3>Pelouse taille {props.size}</h3>\n    \n          {lawn.map((s,i) => \n            <div key={\"r\"+i} className=\"board-row\">\n            {lawn.map((sq,index) => \n              <Square key={index} id={i+''+index} />\n            )}\n            </div>\n          )}\n    </div>\n  );\n}\nexport default Lawn"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAAA;AAG3B,MAAMC,IAAI,GAAIC,KAAK,IAAM;EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACQ,KAAK,CAACC,QAAQ,CAACJ,KAAK,CAACK,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACxE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAACb,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAE9C,MAAMc,eAAe,GAAGC,GAAG,IAAI;IAC7B,IAAIC,IAAI,GAAGJ,SAAS;IACpBI,IAAI,CAACC,IAAI,CAACF,GAAG,CAAC;IACdF,YAAY,CAACE,GAAG,CAAC;EACnB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,KAAI,IAAIiB,QAAQ,IAAIN,SAAS,EAAE;MAE7B,IAAGO,MAAM,CAACD,QAAQ,CAAC,CAACE,KAAK,CAAC,OAAO,CAAC,EAAE;QAClCC,OAAO,CAACC,GAAG,CAAC,KAAK,EAACJ,QAAQ,CAAC;MAC7B;IACF;EAEF,CAAC,EAAC,CAACN,SAAS,CAAC,CAAC;EAEd,oBACC;IAAA,wBACG;MAAK,SAAS,EAAC,MAAM;MAAA,UACnBP,KAAK,CAACkB,MAAM,IAAIlB,KAAK,CAACkB,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC9C,QAAC,KAAK;QAAsB,MAAM,EAAEZ,eAAgB;QAAC,IAAI,EAAE,WAAW,GAACY,KAAM;QAAC,QAAQ,EAAED,KAAK,CAACE,KAAM;QAAC,CAAC,EAAElB,QAAQ,CAACgB,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAAE;QAAC,CAAC,EAAEnB,QAAQ,CAACgB,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAAE;QAAC,CAAC,EAAEH,KAAK,CAACG,OAAO,CAAC,CAAC,CAAE;QAAC,IAAI,EAAEvB,KAAK,CAACK;MAAK,GAA7L,QAAQ,GAACgB,KAAK;QAAA;QAAA;QAAA;MAAA,QAC3B;IAAC;MAAA;MAAA;MAAA;IAAA,QACI,eAER;MAAA,8BAAoBrB,KAAK,CAACK,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EAE7BJ,IAAI,CAACkB,GAAG,CAAC,CAACK,CAAC,EAACC,CAAC,kBACZ;MAAiB,SAAS,EAAC,WAAW;MAAA,UACrCxB,IAAI,CAACkB,GAAG,CAAC,CAACO,EAAE,EAACL,KAAK,kBACjB,QAAC,MAAM;QAAa,EAAE,EAAEI,CAAC,GAAC,EAAE,GAACJ;MAAM,GAAtBA,KAAK;QAAA;QAAA;QAAA;MAAA,QAAoB;IACvC,GAHS,GAAG,GAACI,CAAC;MAAA;MAAA;MAAA;IAAA,QAIT,CACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAA,GAvCK1B,IAAI;AAAA,KAAJA,IAAI;AAwCV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}